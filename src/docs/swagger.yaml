openapi: 3.0.0
info:
  title: Circle-App
  version: 1.0.0
servers:
  - url: http://localhost:3000
tags:
  - name: Authentificate
  - name: Threads
  - name: Reply
  - name: Profile
  - name: follows
  - name: Like/Unlike
paths:
  /api/v1/auth/login:
    post:
      tags:
        - Authentificate
      summary: Login User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                identifier: galang@gmail.com
                password: '123456'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/auth/register:
    post:
      tags:
        - Authentificate
      summary: Register User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: rendi
                name: rendi Suroto
                email: rendi@gmail.com
                password: '123456'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/auth:
    get:
      tags:
        - Authentificate
      summary: Request Token
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/logout:
    get:
      tags:
        - Authentificate
      summary: Logout User
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/thread:
    get:
      tags:
        - Threads
      summary: Get All Threads
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          example: '25'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/auth/thread:
    post:
      tags:
        - Threads
      summary: Add New-Threads
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                content:
                  type: string
                  example: coba lagi nih...
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/thread/image:
    get:
      tags:
        - Threads
      summary: Get Image in Thread
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/thread/9:
    get:
      tags:
        - Threads
      summary: Get detail Thread By Id
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/thread/user:
    get:
      tags:
        - Threads
      summary: Get Content in Thread
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/reply:
    post:
      tags:
        - Reply
      summary: Add New-Reply
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                content:
                  type: string
                  example: oke
                image:
                  type: string
                  format: binary
      parameters:
        - name: thread_id
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Reply
      summary: Get All Replies in Thread
      parameters:
        - name: thread_id
          in: query
          schema:
            type: integer
          example: '10'
        - name: limit
          in: query
          schema:
            type: integer
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/myProfile/edit:
    put:
      tags:
        - Profile
      summary: Edit Profile
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                photo_profile:
                  type: string
                  format: binary
                cover_Photo:
                  type: string
                email:
                  type: string
                username:
                  type: string
                fullname:
                  type: string
                bio:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/search:
    get:
      tags:
        - Profile
      summary: Search User by name or username
      parameters:
        - name: keyword
          in: query
          schema:
            type: string
          example: sinta
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/recomendation:
    get:
      tags:
        - Profile
      summary: Get Recomendations User
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/follows:
    get:
      tags:
        - follows
      summary: Get Followers or Following
      parameters:
        - name: type
          in: query
          schema:
            type: string
          description: followers | following
          example: followers
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - follows
      summary: Follow User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                followed_id: 9
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - follows
      summary: UnFollow User
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/thread/like/1:
    post:
      tags:
        - Like/Unlike
      summary: Like Thread
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\r\n    \"followed_id\": 9\r\n}"'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/thread/unLike/1:
    delete:
      tags:
        - Like/Unlike
      summary: unLike Thread
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/reply/like/9:
    post:
      tags:
        - Like/Unlike
      summary: Like Reply
      requestBody:
        content: {}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/reply/unLike/9:
    delete:
      tags:
        - Like/Unlike
      summary: UnLike Reply
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}